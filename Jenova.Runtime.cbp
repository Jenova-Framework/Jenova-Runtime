<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<CodeBlocks_project_file>
	<FileVersion major="1" minor="6" />
	<Project>
		<Option title="Jenova.Runtime" />
		<Option pch_mode="2" />
		<Option compiler="gcc" />
		<Option show_notes="1">
			<notes>
				<![CDATA[============================
Projekt J.E.N.O.V.A :: Runtime
============================

Jenova Runtime is an extension library for the Godot 4 Game Engine that brings fully-featured C++ scripting directly into the Godot Editor.
  
Licensed under MIT license.
  
Project Link : https://github.com/Jenova-Framework/Jenova-Runtime

============================
Developed By Hamid.Memar
============================]]>
			</notes>
		</Option>
		<Build>
			<Target title="Linux-Clang">
				<Option platforms="Unix;" />
				<Option output="Linux64/Jenova" imp_lib="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).a" def_file="$(TARGET_OUTPUT_DIR)$(TARGET_OUTPUT_BASENAME).def" prefix_auto="1" extension_auto="1" />
				<Option object_output="Linux64/Cache/" />
				<Option type="3" />
				<Option compiler="clang" />
				<Option createDefFile="1" />
				<Option createStaticLib="1" />
				<Compiler>
					<Add option="-fPIC" />
					<Add option="-m64" />
					<Add option="-O2" />
					<Add option="-w" />
					<Add option="-std=c++20" />
					<Add option="-std=c17" />
					<Add option="-pthread" />
					<Add option="-DJENOVA_RUNTIME" />
					<Add option="-DJENOVA_SDK_BUILD" />
					<Add option="-DTYPED_METHOD_BIND" />
					<Add directory="Libs" />
					<Add directory="Libs/GodotSDK" />
					<Add directory="Libs/Archive" />
					<Add directory="Libs/Curl" />
				</Compiler>
				<Linker>
					<Add option="-m64" />
					<Add option="-static-libstdc++" />
					<Add option="-static-libgcc" />
					<Add option="-pthread" />
					<Add library="Libs/libzlib-static-gcc-x86_64.a" />
					<Add library="Libs/libtcc-static-gcc-x86_64.a" />
					<Add library="Libs/libgodotcpp-static-gcc-x86_64.a" />
					<Add library="Libs/libcurl-static-gcc-x86_64.a" />
					<Add library="Libs/libasmjit-static-gcc-x86_64.a" />
					<Add library="Libs/libarchive-static-gcc-x86_64.a" />
					<Add library="Libs/liblzma-static-gcc-x86_64.a" />
					<Add library="Libs/libxml2-static-gcc-x86_64.a" />
					<Add library="Libs/libdwarf-static-gcc-x86_64.a" />
					<Add library="ssl" />
					<Add library="crypto" />
					<Add library="dl" />
					<Add library="rt" />
				</Linker>
				<ExtraCommands>
					<Add after="mv Linux64/libJenova.so Linux64/Jenova.Runtime.Linux64.so" />
				</ExtraCommands>
			</Target>
		</Build>
		<Unit filename="AboutImage.h" />
		<Unit filename="BuiltinFonts.h" />
		<Unit filename="CodeTemplates.h" />
		<Unit filename="Documentation.h" />
		<Unit filename="IconDatabase.h" />
		<Unit filename="InternalSources.h" />
		<Unit filename="Jenova.hpp" />
		<Unit filename="JenovaIcon64.h" />
		<Unit filename="JenovaSDK.h" />
		<Unit filename="JenovaVM.h" />
		<Unit filename="TypesIcons.h" />
		<Unit filename="VisualStudioTemplates.h" />
		<Unit filename="asset_monitor.cpp" />
		<Unit filename="asset_monitor.h" />
		<Unit filename="jenova.cpp" />
		<Unit filename="jenovaSDK.cpp" />
		<Unit filename="package_manager.cpp" />
		<Unit filename="package_manager.h" />
		<Unit filename="script_compiler.cpp" />
		<Unit filename="script_compiler.h" />
		<Unit filename="script_instance.cpp" />
		<Unit filename="script_instance.h" />
		<Unit filename="script_instance_base.cpp" />
		<Unit filename="script_instance_base.h" />
		<Unit filename="script_interpreter.cpp" />
		<Unit filename="script_interpreter.h" />
		<Unit filename="script_language.cpp" />
		<Unit filename="script_language.h" />
		<Unit filename="script_manager.cpp" />
		<Unit filename="script_manager.h" />
		<Unit filename="script_object.cpp" />
		<Unit filename="script_object.h" />
		<Unit filename="script_resource.cpp" />
		<Unit filename="script_resource.h" />
		<Unit filename="script_templates.cpp" />
		<Unit filename="script_templates.h" />
		<Unit filename="task_system.cpp" />
		<Unit filename="task_system.h" />
		<Unit filename="tiny_profiler.cpp" />
		<Unit filename="tiny_profiler.h" />
		<Extensions />
	</Project>
</CodeBlocks_project_file>
